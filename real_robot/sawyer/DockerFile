# Dockerfile.noetic
# Ubuntu 20.04 + ROS Noetic
FROM ubuntu:20.04

ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Etc/UTC

# basic deps and locales
RUN apt-get update \
 && apt-get install -y --no-install-recommends \
    locales curl gnupg2 lsb-release ca-certificates build-essential \
 && locale-gen en_US.UTF-8 \
 && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 \
 && rm -rf /var/lib/apt/lists/*

ENV LANG en_US.UTF-8
ENV LC_ALL en_US.UTF-8

# Add ROS repo and install Noetic
RUN apt-get update \
 && apt-get install -y --no-install-recommends curl gnupg2 lsb-release \
 && curl -sSL "http://packages.ros.org/ros.key" | apt-key add - \
 && echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros1.list \
 && apt-get update \
 && apt-get install -y --no-install-recommends \
    ros-noetic-desktop-full python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool python3-catkin-tools git \
 && rm -rf /var/lib/apt/lists/*

# initialize rosdep (safe to run even if already initialized)
RUN rosdep init || true
RUN rosdep update --rosdistro noetic || true

# Create a non-root user for development
RUN useradd -ms /bin/bash developer
USER developer
WORKDIR /home/developer

# Create a catkin workspace (empty) so user can mount/source it
RUN /bin/bash -lc "source /opt/ros/noetic/setup.bash; mkdir -p ~/catkin_ws/src; cd ~/catkin_ws; catkin_make"

# Copy entrypoint
COPY ros_entrypoint_noetic.sh /ros_entrypoint.sh
RUN chmod +x /ros_entrypoint.sh
ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["/bin/bash"]